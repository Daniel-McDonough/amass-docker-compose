services:
  amass:
    build: https://github.com/owasp-amass/amass.git#develop
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./config:/.config/amass:rw
      - ./data:/data:rw
    depends_on:
      engine:
        condition: service_healthy

  engine:
    build: https://github.com/owasp-amass/engine.git#develop
    container_name: engine
    networks:
      - amass
    env_file:
      - ./config/logs/syslog.env
    volumes:
      - ./data:/.config/amass:rw
    expose: 
      - "4000"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 360s
      resources:
        reservations:
          memory: 1024M
    depends_on:
      assetdb:
        condition: service_healthy
      syslog:
        condition: service_healthy
      grafana:
        condition: service_healthy

  assetdb:
    build: https://github.com/owasp-amass/asset-db.git#master
    container_name: assetdb
    networks:
      - amass
    volumes:
      - ./assetdb:/var/lib/postgresql/data:rw
    environment:
      - POSTGRES_USER=postgres
    env_file:
      - ./config/assetdb.env
    configs:
      - source: grafana_initdb
        target: /usr/share/postgresql/2_grafanadb.sh
    ports:
      - "5432:5432"
    deploy:
      restart_policy:
        condition: any
      resources:
        reservations:
          memory: 128M
    entrypoint:
      - sh
      - -euc
      - |
        cp /usr/share/postgresql/2_grafanadb.sh /docker-entrypoint-initdb.d/2_grafanadb.sh
        chmod +x /docker-entrypoint-initdb.d/2_grafanadb.sh
        /usr/local/bin/docker-entrypoint.sh postgres

  syslog:
    image: balabit/syslog-ng:latest
    container_name: syslog
    networks:
      - amass
    environment:
      - TZ=Etc/UTC
    configs:
      - source: syslog_config
        target: /etc/syslog-ng/syslog-ng.conf
    volumes:
      - ./logs:/var/log:rw,z
    expose:
      - "5514/udp"
    deploy:
      restart_policy:
        condition: any
    depends_on:
      loki:
        condition: service_healthy
      promtail:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/usr/sbin/syslog-ng-ctl", "healthcheck"]
      interval: 5s
      retries: 20
    entrypoint: ["/usr/sbin/syslog-ng", "--no-caps", "-F"]

  loki:
    image: grafana/loki:latest
    container_name: loki
    user: "1000:1000"
    networks:
      - amass
    configs:
      - source: loki_config
        target: /etc/loki/local-config.yaml
    volumes:
      - ./logs:/loki:rw
    expose:
      - "3100/tcp"
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --timeout=2 --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 3s
      timeout: 2s
      retries: 20

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    networks:
      - amass
    configs:
      - source: promtail_config
        target: /etc/promtail/config.yml
    expose:
      - "1514/udp"
      - "9080/tcp"
    deploy:
      restart_policy:
        condition: any
    depends_on:
      loki:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 3s
      timeout: 2s
      retries: 20

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - amass
    environment:
      - GF_LOG_MODE=console
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_FEATURE_TOGGLES_ENABLE=transformationsVariableSupport
    env_file:
      - ./config/assetdb.env
      - ./config/logs/syslog.env
    configs:
      - source: grafana_config
        target: /etc/grafana/grafana.ini
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3000:3000"
    depends_on:
      loki:
        condition: service_healthy
      assetdb:
        condition: service_healthy
      syslog:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --timeout=2 --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 3s
      timeout: 2s
      retries: 20

networks:
  amass:
    driver: bridge
    name: amass-net
volumes:
  loki_logs:

configs:
  syslog_config:
    file: ./config/logs/syslog-ng.conf
  loki_config:
    file: ./config/logs/loki.yaml
  promtail_config:
    file: ./config/logs/promtail.yaml
  grafana_config:
    file: ./config/grafana/grafana.ini
  grafana_initdb:
    file: ./config/grafana/initdb_grafana.sh
